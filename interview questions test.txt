1.What is difference in Overloading and Over riding?

Answer:-

>Overriding implements Runtime Polymorphism whereas Overloading implements Compile time polymorphism.
 The method Overriding occurs between superclass and subclass. Overloading occurs between the methods in the same class.
>Overriding methods have the same signature i.e. same name and method arguments. Overloaded method names are the same but the parameters are different.
 With Overloading, the method to call is determined at the compile-time. With overriding, the method call is determined at the runtime based on the object type.

2.If both the functions are statis can we over ride

Answer:-
 
>No, we cannot override static methods because method overriding is based on dynamic binding at runtime and the static methods are bonded using static binding at compile time.

3. Diffference bew Final , Finally and Finalize?

Answer:-
 
>The difference between final, finally and finalize is that the final is an access modifier,
 finally is the block in Exception Handling and finalize is the method of object class.

4.What are maker Interfaces?

Answer:-

>A marker interface is an interface that has no methods or constants inside it. 
It provides run-time type information about objects, so the compiler and JVM have additional information about the object.

5.What is Singleton class?

Answer:-

>Singleton class is a class that can have only one object (an instance of the class) at a time. 
After the first time, if we try to instantiate the Singleton class, the new variable also points to the first instance created

6.What is the underlying Data structure for Arraylist and Linkedlist?

Answer:-

>Array List:
It is a resizable array implementation in java. The backing data structure of ArrayList is an array of Object class. When creating an ArrayList you can provide initial capacity then the array is declared with the given capacity. 

>Linked list:
It is an implemented using Doubly Linked List Data Structure. It supports duplicate elements. It stores or maintains it's elements in Insertion order. We can add any number of null elements.

7.What is hash collision?

Answer:-

>A hash collision is when two pieces of data in a hash table share the same hash value. 
The hash value in this case is derived from a hash function which takes a data input and returns a fixed length of bits.

8.What are lambda Expressions?

Answer:-

>A lambda expression is a short block of code which takes in parameters and returns a value. Lambda expressions are similar to methods, but they do not need a name and they can be implemented right in the body of a method.

9.Whats is functional interface?

Answer:-

>A functional interface is an interface that contains only one abstract method.
 They can have only one functionality to exhibit. From Java 8 onwards, lambda expressions can be used to represent the instance of a functional interface

10.What are optional classes in Java 8?

Answer:-

>Optional is a container object used to contain not-null objects.
 Optional object is used to represent null with absent value. This class has various utility methods to facilitate code to handle values as 'available' or 'not available' instead of checking null values.

11.Whats is factory design pattern and Adapter and difference bew them?

>Factory design:-
With the Factory pattern, you produce instances of implementations of a particular interface.

>Adapter:-
Adapter pattern is used after the application components are designed so that we can use them without modifying the source code.

12.What are Solid principles?

Answer:-

>SOLID principles are object-oriented design concepts relevant to software development.
 SOLID is an acronym for five other class-design principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle, and Dependency Inversion Principle.

13. What does @component and @scan do in Sprinboot annaotation?
Component is an annotation that allows Spring to automatically detect our custom beans. In other words, without having to write any explicit code, Spring will: Scan our application for classes annotated with @Component. Instantiate them and inject any specified dependencies into them.

 >@ComponentScan annotation along with the @Configuration annotation to specify the packages that we want to be scanned. @ComponentScan without arguments tells Spring to scan the current package and all of its sub-packages.

14.Whats is the Diference bew JPA , Hibernate and ORM?

Answer:-

>Java Persistence API (JPA) defines the management of relational data in the Java applications. Hibernate is an Object-Relational Mapping (ORM) tool which is used to save the state of Java object into the database. It is just a specification. Various ORM tools implement it for data persistence.

15.What is indexing in Database

Answer:-

>A database index is a data structure that improves the speed of data retrieval operations on a database table at the cost of additional writes and storage space to maintain the index data structure

16.What are 4 types of Drivers in Jdbc?

Answer:-

Type-1 driver or JDBC-ODBC bridge driver

Type-2 driver or Native-API driver

Type-3 driver or Network Protocol driver

Type-4 driver or Thin driver

17.What is difrence bew @component and @bean and @service?

Answer:-

@Component is an annotation that allows Spring to automatically detect our custom beans. In other words, without having to write any explicit code.
@service is used to mark the class as a service provider. So overall @Service annotation is used with classes that provide some business functionalities. Spring context will autodetect these classes when annotation-based configuration and classpath scanning is used. Procedure. Create a Simple Spring Boot Project.
@Bean annotation tells that a method produces a bean to be managed by the Spring container. It is a method-level annotation. During Java configuration ( @Configuration ), the method is executed and its return value is registered as a bean within a BeanFactory 

18. What is difference bew SOAP and restful services techinically?

Answer:-

>Simple object access protocol (SOAP) is an official protocol maintained by the World Wide Web Consortium (W3C).
 Typically, an API will adhere to either REST or SOAP, depending on the use case and preferences of the developer

19 . Difference in POST and PUT?

Answer:-
>PUT method is call when you have to modify a single resource, 
which is already a part of resource collection. POST method is call when you have to add a child resource under resources collection.

20.IS react uni directional or Bi directional?

Answer:-

>React doesn't support bi-directional binding to make sure you are following a clean data flow architecture. The major benefit of this approach is that data flows throughout your app in a single direction, giving you better control over it.
